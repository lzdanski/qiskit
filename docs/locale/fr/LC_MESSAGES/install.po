# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-31 13:06-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../install.rst:2
msgid "Qiskit Installation and setup"
msgstr ""

#: ../../install.rst:6
msgid "Dependencies"
msgstr ""

#: ../../install.rst:8
msgid ""
"To use Qiskit  you'll need to have installed at least `Python 3.5 or "
"later <https://www.python.org/downloads/>`__. `Jupyter Notebooks "
"<https://jupyter.readthedocs.io/en/latest/install.html>`__ is also "
"recommended for interacting with `tutorials`_."
msgstr ""

#: ../../install.rst:14
msgid ""
"For this reason we recommend installing `Anaconda 3 "
"<https://www.anaconda.com/download/>`__ python distribution, which "
"already comes with all these dependencies pre-installed."
msgstr ""

#: ../../install.rst:17
msgid ""
"Windows users also need to install VC++ runtime components. We recommend "
"one of the following links."
msgstr ""

#: ../../install.rst:19
msgid ""
"`Microsoft Visual C++ Redistributable for Visual Studio 2017 "
"<https://go.microsoft.com/fwlink/?LinkId=746572>`__"
msgstr ""

#: ../../install.rst:20
msgid ""
"`Microsoft Visual C++ Redistributable for Visual Studio 2015 "
"<https://www.microsoft.com/en-US/download/details.aspx?id=48145>`__"
msgstr ""

#: ../../install.rst:24
msgid "Installation with environment"
msgstr ""

#: ../../install.rst:28
msgid ""
"We recommend using `Python virtual environments "
"<https://docs.python.org/3/tutorial/venv.html>`__ to cleanly separate "
"Qiskit from other applications and improve your experience."
msgstr ""

#: ../../install.rst:32
msgid "The simplest way to use environments is by using Anaconda"
msgstr ""

#: ../../install.rst:40
msgid ""
"The recommended way to install Qiskit is by using the PIP (Python package"
" manager) tool:"
msgstr ""

#: ../../install.rst:47
msgid ""
"This will install the latest stable release, along with all the "
"dependencies."
msgstr ""

#: ../../install.rst:51
msgid "Install with visualization dependencies"
msgstr ""

#: ../../install.rst:53
msgid ""
"There are optional dependencies that are required to use all the "
"visualization functions included in Qiskit. You can install these at the "
"same time by running:"
msgstr ""

#: ../../install.rst:61
msgid "which will install qiskit and all the visualization dependencies."
msgstr ""

#: ../../install.rst:65
msgid "Setup a standalone version"
msgstr ""

#: ../../install.rst:67
msgid ""
"The best way to install Qiskit when the goal is to extend its "
"capabilities is by cloning the individual repositories"
msgstr ""

#: ../../install.rst:70
msgid "`Terra repository <https://github.com/Qiskit/qiskit-terra>`__."
msgstr ""

#: ../../install.rst:71
msgid "`Aer repository <https://github.com/Qiskit/qiskit-aer>`__."
msgstr ""

#: ../../install.rst:72
msgid "`Aqua repository <https://github.com/Qiskit/qiskit-aqua>`__."
msgstr ""

#: ../../install.rst:73
msgid "`Chemistry repository <https://github.com/Qiskit/qiskit-chemistry>`__."
msgstr ""

#: ../../install.rst:75
msgid "and following the standalone install instructions in these repositories."
msgstr ""

#: ../../install.rst:79
msgid "Configure your API token and IBMQ credentials"
msgstr ""

#: ../../install.rst:81
msgid ""
"Create an `IBM Q <https://quantumexperience.ng.bluemix.net>`__ account if"
" you haven't already done so"
msgstr ""

#: ../../install.rst:83
msgid "Get an API token from the IBM Q website under “My Account” > “Advanced”"
msgstr ""

#: ../../install.rst:88
msgid "Automatically loading credentials"
msgstr ""

#: ../../install.rst:90
msgid ""
"The credentials for accessing the IBM Q quantum devices can be loaded "
"automatically, thus streamlining the set up of the IBM Q authentication."
"  You can set or store your API credentials once after installation, and "
"when you want to use them, you can simply run:"
msgstr ""

#: ../../install.rst:101
msgid ""
"This ``IBMQ.load_accounts()`` call performs the automatic loading of the "
"credentials from several sources (if needed), and authenticates against "
"IBM Q, making the online devices available to your program. Please use "
"one of the following methods for storing the credentials before calling "
"the automatic registration:"
msgstr ""

#: ../../install.rst:108
msgid "Store API credentials locally"
msgstr ""

#: ../../install.rst:110
msgid ""
"For most users, storing your API credentials is the most convenient "
"approach. Your information is stored locally in a configuration file "
"called `qiskitrc`, and once stored, you can use the credentials without "
"explicitly passing them to your program."
msgstr ""

#: ../../install.rst:115
msgid "To store your information, simply run:"
msgstr ""

#: ../../install.rst:124
msgid "where `MY_API_TOKEN` should be replaced with your token."
msgstr ""

#: ../../install.rst:126
msgid ""
"If you are on the IBM Q network, you must also pass the `url` argument "
"found on your q-console account page to `IBMQ.save_account()`, along with"
" any other additional information required (e.g. proxy information):"
msgstr ""

#: ../../install.rst:139
msgid "Manually loading credentials"
msgstr ""

#: ../../install.rst:141
msgid ""
"In more complex scenarios or for users that need finer control over "
"multiple accounts, one can pass the API token, and the other parameters, "
"directly to the ``IBMQ.enable_account()`` function, that will ignore the "
"automatic loading of the credentials and use the arguments directly. For "
"example:"
msgstr ""

#: ../../install.rst:152
msgid ""
"will authenticate using ``MY_API_TOKEN`` and the specified URL, "
"regardless of the configuration stored in the config file, the "
"environment variables, or the ``Qconfig.py`` file, if any."
msgstr ""

#: ../../install.rst:156
msgid "Manually loading from a ``Qconfig.py`` file can also be done:"
msgstr ""

#: ../../install.rst:166
msgid ""
"Please refer to the ``qiskit.IBMQ`` documentation for more information "
"about using multiple credentials."
msgstr ""

#: ../../install.rst:171
msgid "Troubleshooting"
msgstr ""

#: ../../install.rst:173
msgid ""
"The installation steps described on this document assume familiarity with"
" the Python environment on your setup (for example, standard Python, "
"``virtualenv`` or Anaconda). Please consult the relevant documentation "
"for instructions tailored to your environment."
msgstr ""

#: ../../install.rst:178
msgid ""
"Depending on the system and setup, appending \"sudo -H\" before the ``pip"
" install`` command could be needed:"
msgstr ""

