# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-31 13:06-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../roadmap.rst:2
msgid "The Qiskit Roadmap 2019"
msgstr ""

#: ../../roadmap.rst:4
msgid ""
"With a very successful r0.7 release behind us, now is a good time to look"
" towards the future. We are going to look out 12 months to establish a "
"set of goals we want to work towards. When planning, we typically look at"
" potential work from the perspective of the elements."
msgstr ""

#: ../../roadmap.rst:10
msgid "Qiskit Terra"
msgstr ""

#: ../../roadmap.rst:12
msgid ""
"In 2018 we worked on formalizing the backends and user flow in Qiskit "
"Terra. The basic Idea is as follows: the user designs a quantum circuit "
"and then, through a set of transpiler passes, rewrites the circuit to run"
" on different backends with different optimizations. We also introduced "
"the concept of a *provider*, whose role is to supply backends for the "
"user to run quantum circuits on. The provider API we have defined at "
"version one supplies a set of schemas to verify that the provider and its"
" backends are Terra-compatible."
msgstr ""

#: ../../roadmap.rst:20
msgid "In 2019, we have many extensions planed. These include:"
msgstr ""

#: ../../roadmap.rst:22
msgid ""
"**Extending the passes in the transpiler.** The goal here is to be more "
"efficient in circuit depth as well as adding passes that find approximate"
" circuits and resource estimations."
msgstr ""

#: ../../roadmap.rst:25
msgid ""
"**Circuit Foundry and Circuit API.** This has the goal of making sure "
"that a user can easily build complex circuits from operations. Some of "
"these include adding controls and power to operations and inserting "
"unitary matrices directly."
msgstr ""

#: ../../roadmap.rst:29
msgid ""
"**OpenPulse.** Now that OpenPulse is defined, and the IBM Q provider can "
"accept it, we plan to build out the pulse features. These will include a "
"scheduler and tools for building experiments out of pulses. Also included"
" will be tools for mapping between experiments with gates (QASM) to "
"experiments with Pulses."
msgstr ""

#: ../../roadmap.rst:35
msgid "Qiskit Aer"
msgstr ""

#: ../../roadmap.rst:37
msgid ""
"The first version of Qiskit Aer was released at the end of 2018. It "
"included C++ implementations of Qasm, statevector, and unitary "
"simulators. These are the core to Qiskit Aer and replace the simulators "
"that existed in Terra. The QASM simulator includes a customizable general"
" (Kraus) noise model, and all simulators are include CPU parallelization "
"through the OpenMP library."
msgstr ""

#: ../../roadmap.rst:43
msgid "In 2019, Aer will be extended in many ways:"
msgstr ""

#: ../../roadmap.rst:45
msgid ""
"**Optimizations.** We are going to start profiling the simulators and "
"work on making them faster. This will include automatic settings for "
"backend configuration and OpenMP parallelization configuration based on "
"the input Qobj and available hardware."
msgstr ""

#: ../../roadmap.rst:48
msgid ""
"**Additional simulator backends.** We will include several approximate "
"simulator backends that are more efficient for specific subclasses of "
"circuits, such as the T-gate simulator, which works on Clifford and T "
"gates (with low T-depth), and a stabilizer simulator,  which works just "
"on Clifford gates."
msgstr ""

#: ../../roadmap.rst:52
msgid ""
"**Noise approximations.** We plan to add noise approximation tools to "
"mapping general (Kraus) noise models to approximate noise model that may "
"be implemented on an approximate backends (for example only mixed "
"Clifford and reset errors in the noise model)."
msgstr ""

#: ../../roadmap.rst:57
msgid "Qiskit Ignis"
msgstr ""

#: ../../roadmap.rst:59
msgid ""
"This year, we are going to release the first version of Qiskit Ignis. The"
" goal of Ignis is to develop as set of tools for characterization of "
"errors, improving gates, and enhancing computing in the presence of "
"noise. Such examples are optimal control, dynamical decoupling, and error"
" mitigation."
msgstr ""

#: ../../roadmap.rst:65
msgid "In 2019 the first release will include"
msgstr ""

#: ../../roadmap.rst:67
msgid "Tools for quantum state tomography"
msgstr ""

#: ../../roadmap.rst:69
msgid "Tools for quantum process tomography"
msgstr ""

#: ../../roadmap.rst:71
msgid "Tools for randomize benchmarking over different groups"
msgstr ""

#: ../../roadmap.rst:73
msgid "Tools for optimal control, such as pulse shaping"
msgstr ""

#: ../../roadmap.rst:75
msgid "Tools for dynamical decoupling"
msgstr ""

#: ../../roadmap.rst:77
msgid "Tools using randomization to improve circuits in the presence of noise"
msgstr ""

#: ../../roadmap.rst:79
msgid ""
"Tools for error mitigation to make quantum chemistry experiments work "
"better"
msgstr ""

#: ../../roadmap.rst:82
msgid "Qiskit Aqua"
msgstr ""

#: ../../roadmap.rst:84
msgid ""
"Aqua is an open-source library of quantum algorithms and applications, "
"introduced in June 2018. As a library of quantum algorithms, Aqua comes "
"with a rich set of quantum algorithms of general applicability—such as "
"VQE, QAOA, Grover's Search, Amplitude Estimation and Phase Estimation—and"
" domain-specific algorithms-such as the Support Vector Machine (SVM) "
"Quantum Kernel and Variational algorithms, suitable for supervised "
"learning.  In addition, Aqua includes algorithm-supporting components, "
"such as optimizers, variational forms, oracles, Quantum Fourier "
"Transforms, feature maps, multiclass classification extension algorithms,"
" uncertainty problems, and random distributions. As a framework for "
"quantum applications, Aqua provides support for Chemistry (released "
"separately as the Qiskit Chemistry component), as well as Artificial "
"Intelligence (AI), Optimization and Finance.  Aqua is extensible across "
"multiple domains, and has been designed and structured as a framework "
"that allows researchers to contribute their own implementations of new "
"algorithms and algorithm-supporting components."
msgstr ""

#: ../../roadmap.rst:98
msgid "Over the course of 2019, we are planning to enrich Aqua as follows:"
msgstr ""

#: ../../roadmap.rst:100
msgid ""
"We will include several new quantum algorithms, such as Deutsch-Jozsa, "
"Simon's, Bernstein-Vazirani, and Harrow, Hassidim, and Lloyd (HHL)"
msgstr ""

#: ../../roadmap.rst:103
msgid ""
"We will improve the performance of quantum algorithms on top of both "
"simulators and real hardware"
msgstr ""

#: ../../roadmap.rst:105
msgid "We will provide better support for execution on real quantum hardware"
msgstr ""

#: ../../roadmap.rst:106
msgid ""
"We will increase the set of problems supported by the AI, Optimization "
"and Finance applications of Aqua"
msgstr ""

#: ../../roadmap.rst:110
msgid "Qiskit Chemistry"
msgstr ""

#: ../../roadmap.rst:111
msgid ""
"Qiskit Chemistry is the first end-to-end software stack that enables "
"experimenting with chemistry problems on Noisy Intermediate-Scale Quantum"
" (NISQ) computers. It translates high-level chemistry problem "
"specifications into into inputs for Aqua algorithms, which are then "
"executed on top of IBM quantum hardware of simulators. Qiskit Chemistry "
"is an Aqua application.  As such, it was designed to be modular and "
"extensible, and to allow users with different levels of experience to "
"execute chemistry experiments and contribute to the quantum computing "
"chemistry software stack. Qiskit Chemistry continues to be the most "
"advanced quantum chemistry application available, with support for the "
"computation of a molecule's ground state energy and dipole moment, and "
"with the inclusion of numerous chemistry-specific algorithmic components."
msgstr ""

#: ../../roadmap.rst:122
msgid "In 2019, we are planning to enrich Qiskit Chemistry as follows:"
msgstr ""

#: ../../roadmap.rst:124
msgid ""
"Improved scalability to support the simulation of larger molecules and/or"
" the use of more sophisticated basis sets"
msgstr ""

#: ../../roadmap.rst:126
msgid ""
"Enhanced support for the execution of chemistry experiments on real "
"hardware"
msgstr ""

#: ../../roadmap.rst:127
msgid ""
"Support for new chemistry problems, such as the computation of a "
"molecule's excited states"
msgstr ""

#: ../../roadmap.rst:130
msgid "Summary"
msgstr ""

#: ../../roadmap.rst:132
msgid ""
"These are examples of just some of the work we will be focusing on in the"
" next 12 months. We will continuously adapt the plan based on feedback. "
"Please follow along and let us know what you think!"
msgstr ""

