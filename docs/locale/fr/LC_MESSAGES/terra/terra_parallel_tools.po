# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-31 13:06-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../terra/terra_parallel_tools.rst:5
msgid "Using the Qiskit Terra parallel_map"
msgstr ""

#: ../../terra/terra_parallel_tools.rst:7
msgid ""
"In this tutorial we will see how to leverage the ``parallel_map`` routine"
" in Qiskit Terra to execute functions in parallel, and track the progress"
" of these parallel tasks using progress bars."
msgstr ""

#: ../../terra/terra_parallel_tools.rst:19
msgid "Define a function that builds a single Quantum Volume circuit"
msgstr ""

#: ../../terra/terra_parallel_tools.rst:21
msgid ""
"Here we will construct a set of 1000 Quantum Volume circuits of width and"
" depth 4. For a technical discussion of Quantum Volume see: "
"https://arxiv.org/abs/1811.12926."
msgstr ""

#: ../../terra/terra_parallel_tools.rst:39
msgid ""
"In preparation for executing in parallel, the code below takes an index "
"value, an array of random number seeds, and the width and depth of the "
"circuit as inputs."
msgstr ""

#: ../../terra/terra_parallel_tools.rst:90
msgid "Generate 1000 circuits in parallel and track progress"
msgstr ""

#: ../../terra/terra_parallel_tools.rst:92
msgid ""
"Becuase Quantum Volume circuits are generated randomly for the NumPy "
"random number generator, we must be careful when running in parallel. If "
"the random number generator is not explicitly seeded, the computer uses "
"the current time as a seed value. When running in parallel, this can "
"result in each process starting with the saem seed value, and thus not "
"giving random results. Here we generate all the random seed values "
"needed, and pass this into ``parallel_map`` as a extra argument in "
"``task_args``, along with ``width`` and ``depth``. The main function "
"argument passed in ``parallel_map`` is just an array that indexes the "
"processes and seed value."
msgstr ""

#: ../../terra/terra_parallel_tools.rst:117
msgid "Use a Jupyter progress bar"
msgstr ""

