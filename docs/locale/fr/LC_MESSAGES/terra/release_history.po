# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-31 13:06-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../terra/release_history.rst:3
msgid "Release history"
msgstr ""

#: ../../terra/release_history.rst:7
msgid "Release notes"
msgstr ""

#: ../../terra/release_history.rst:10
msgid "Qiskit Terra 0.7.0"
msgstr ""

#: ../../terra/release_history.rst:12
msgid ""
"This release includes several new features and many bug fixes. With this "
"release the interfaces for circuit diagram, histogram, bloch vectors, and"
" state visualizations are declared stable. Additionally, this release "
"includes a defined and standardized bit order/endianness throughout all "
"aspects of Qiskit. These are all declared as stable interfaces in this "
"release which won't have breaking changes made moving forward, unless "
"there is appropriate and lengthy deprecation periods warning of any "
"coming changes."
msgstr ""

#: ../../terra/release_history.rst:20
msgid "There is also the introduction of the following new features:"
msgstr ""

#: ../../terra/release_history.rst:22
msgid "A new ASCII art circuit drawing output mode"
msgstr ""

#: ../../terra/release_history.rst:23
msgid ""
"A new ciruit drawing interface off of QuantumCircuit objects. Now you can"
" call ``circuit.draw()`` or ``print(circuit)`` and render a drawing of "
"the circuit."
msgstr ""

#: ../../terra/release_history.rst:26
msgid "A visualizer for drawing the DAG representation of a circuit"
msgstr ""

#: ../../terra/release_history.rst:27
msgid ""
"A new quantum state plot type for hinton diagrams in the local matplotlib"
" based state plots."
msgstr ""

#: ../../terra/release_history.rst:29
msgid ""
"2 new constructor methods off the ``QuantumCircuit`` class "
"``from_qasm_str()`` and ``from_qasm_file()`` which let you easily create "
"a circuit object from OpenQASM."
msgstr ""

#: ../../terra/release_history.rst:32
msgid ""
"A new function ``plot_bloch_multivector()`` to plot Bloch vectors from a "
"tensored state vector or density matrix"
msgstr ""

#: ../../terra/release_history.rst:34
msgid ""
"Per-shot measurement results are available in simulators and select "
"devices. These can be accessed by setting the ``memory`` kwarg to "
"``True`` when calling ``compile()`` or ``execute()`` and then accessed "
"using the ``get_memory()`` method on the ``Result`` object."
msgstr ""

#: ../../terra/release_history.rst:38
msgid ""
"A ``qiskit.quantum_info`` module with revamped Pauli objects and methods "
"for working with quantum states."
msgstr ""

#: ../../terra/release_history.rst:40
msgid ""
"New transpile passes for circuit analysis and transformation: "
"CommutationAnalysis, CommutationTransformation, CXCancellation, "
"Decompose, Unroll, Optimize1QGates, CheckMap, CXDirection, "
"BarrierBeforeFinalMeasurements"
msgstr ""

#: ../../terra/release_history.rst:43
msgid ""
"New alternative swap mapper passes in the transpiler: BasicSwap, "
"LookaheadSwap, StochasticSwap"
msgstr ""

#: ../../terra/release_history.rst:45
msgid ""
"More advanced transpiler infrastructure with support for analysis passes,"
" transformation passes, a global property_set for the pass manager, and "
"repeat-until control of passes."
msgstr ""

#: ../../terra/release_history.rst:51
msgid "Upgrading to 0.7.0"
msgstr ""

#: ../../terra/release_history.rst:53
msgid ""
"Please note that some backwards-incompatible changes have been made "
"during this release. The following notes contain information on how to "
"adapt to these changes."
msgstr ""

#: ../../terra/release_history.rst:58
msgid "Changes to Result objects"
msgstr ""

#: ../../terra/release_history.rst:60
msgid ""
"As part of the rewrite of the Results object to be more consistent and a "
"stable interface moving forward a few changes have been made to how you "
"access the data stored in the result object. First the ``get_data()`` "
"method has been renamed to just ``data()``. Accompanying that change is a"
" change in the data format returned by the function. It is now returning "
"the raw data from the backends instead of doing any post-processing. For "
"example, in previous versions you could call::"
msgstr ""

#: ../../terra/release_history.rst:72
msgid "and that would return the unitary matrix like::"
msgstr ""

#: ../../terra/release_history.rst:76
msgid "But now if you call (with the renamed method)::"
msgstr ""

#: ../../terra/release_history.rst:80
msgid "it will return something like::"
msgstr ""

#: ../../terra/release_history.rst:84
msgid ""
"To get the post processed results in the same format as before the 0.7 "
"release you must use the ``get_counts()``, ``get_statevector()``, and "
"``get_unitary()`` methods on the result object instead of "
"``get_data()['counts']``, ``get_data()['statevector']``, and "
"``get_data()['unitary']`` respectively."
msgstr ""

#: ../../terra/release_history.rst:89
msgid ""
"Additionally, support for ``len()`` and indexing on a ``Result`` object "
"has been removed. Instead you should deal with the output from the post "
"processed methods on the Result objects."
msgstr ""

#: ../../terra/release_history.rst:93
msgid ""
"Also, the ``get_snapshot()`` and ``get_snapshots()`` methods from the "
"``Result`` class have been removed. Instead you can access the snapshots "
"using ``Result.data()['snapshots']``."
msgstr ""

#: ../../terra/release_history.rst:99
msgid "Changes to visualization"
msgstr ""

#: ../../terra/release_history.rst:101
msgid ""
"The biggest change made to visualization in the 0.7 release is the "
"removal of Matplotlib and other visualization dependencies from the "
"project requirements. This was done to simplify the requirements and "
"configuration required for installing Qiskit. If you plan to use any "
"visualizations (including all the jupyter magics) except for the "
"``text``, ``latex``, and ``latex_source`` output for the circuit drawer "
"you'll you must manually ensure that the visualization dependencies are "
"installed. You can leverage the optional requirements to the Qiskit-Terra"
" package to do this::"
msgstr ""

#: ../../terra/release_history.rst:112
msgid ""
"Aside from this there have been changes made to several of the interfaces"
" as part of the stabilization which may have an impact on existing code. "
"The first is the the ``basis`` kwarg in the ``circuit_drawer()`` function"
" is no longer accepted. If you were relying on the ``circuit_drawer()`` "
"to adjust the basis gates used in drawing a circuit diagram you will have"
" to do this priort to calling ``circuit_drawer()``. For example::"
msgstr ""

#: ../../terra/release_history.rst:122
msgid "will have to be adjust to be::"
msgstr ""

#: ../../terra/release_history.rst:131
msgid ""
"Moving forward the ``circuit_drawer()`` function will be the sole "
"interface for circuit drawing in the visualization module. Prior to the "
"0.7 release there were several other functions which either used "
"different output backends or changed the output for drawing circuits. "
"However, all those other functions have been deprecated and that "
"functionality has been integrated as options on ``circuit_drawer()``."
msgstr ""

#: ../../terra/release_history.rst:138
msgid ""
"For the other visualization functions, ``plot_histogram()`` and "
"``plot_state()`` there are also a few changes to check when upgrading. "
"First is the output from these functions has changed, in prior releases "
"these would interactively show the output visualization. However that has"
" changed to instead return a ``matplotlib.Figure`` object. This provides "
"much more flexibility and options to interact with the visualization "
"prior to saving or showing it. This will require adjustment to how these "
"functions are consumed. For example, prior to this release when calling::"
msgstr ""

#: ../../terra/release_history.rst:150
msgid ""
"would open up new windows (depending on matplotlib backend) to display "
"the visualization. However starting in the 0.7 you'll have to call "
"``show()`` on the output to mirror this behavior. For example::"
msgstr ""

#: ../../terra/release_history.rst:157
msgid "or::"
msgstr ""

#: ../../terra/release_history.rst:164
msgid ""
"Note that this is only for when running outside of Jupyter. No adjustment"
" is required inside a Jupyter environment because Jupyter notebooks "
"natively understand how to render ``matplotlib.Figure`` objects."
msgstr ""

#: ../../terra/release_history.rst:168
msgid ""
"However, returning the Figure object provides additional flexibility for "
"dealing with the output. For example instead of just showing the figure "
"you can now directly save it to a file by leveraging the ``savefig()`` "
"method. For example::"
msgstr ""

#: ../../terra/release_history.rst:178
msgid ""
"The other key aspect which has changed with these functions is when "
"running under jupyter. In the 0.6 release ``plot_state()`` and "
"``plot_histogram()`` when running under jupyter the default behavior was "
"to use the interactive Javascript plots if the externally hosted "
"Javascript library for rendering the visualization was reachable over the"
" network. If not it would just use the matplotlib version. However in the"
" 0.7 release this no longer the case, and separate functions for the "
"interactive plots, ``iplot_state()`` and ``iplot_histogram()`` are to be "
"used instead. ``plot_state()`` and ``plot_histogram()`` always use the "
"matplotlib versions."
msgstr ""

#: ../../terra/release_history.rst:188
msgid ""
"Additionally, starting in this release the ``plot_state()`` function is "
"deprecated in favor of calling individual methods for each method of "
"plotting a quantum state. While the ``plot_state()`` function will "
"continue to work until the 0.9 release, it will emit a warning each time "
"it is used. The"
msgstr ""

#: ../../terra/release_history.rst:194 ../../terra/release_history.rst:413
#: ../../terra/release_history.rst:450
msgid "Qiskit Terra 0.6"
msgstr ""

#: ../../terra/release_history.rst:194
msgid "Qiskit Terra 0.7+"
msgstr ""

#: ../../terra/release_history.rst:196
msgid "plot_state(rho)"
msgstr ""

#: ../../terra/release_history.rst:196 ../../terra/release_history.rst:197
msgid "plot_state_city(rho)"
msgstr ""

#: ../../terra/release_history.rst:197
msgid "plot_state(rho, method='city')"
msgstr ""

#: ../../terra/release_history.rst:198
msgid "plot_state(rho, method='paulivec')"
msgstr ""

#: ../../terra/release_history.rst:198
msgid "plot_state_paulivec(rho)"
msgstr ""

#: ../../terra/release_history.rst:199
msgid "plot_state(rho, method='qsphere')"
msgstr ""

#: ../../terra/release_history.rst:199
msgid "plot_state_qsphere(rho)"
msgstr ""

#: ../../terra/release_history.rst:200
msgid "plot_state(rho, method='bloch')"
msgstr ""

#: ../../terra/release_history.rst:200
msgid "plot_bloch_multivector(rho)"
msgstr ""

#: ../../terra/release_history.rst:201
msgid "plot_state(rho, method='hinton')"
msgstr ""

#: ../../terra/release_history.rst:201
msgid "plot_state_hinton(rho)"
msgstr ""

#: ../../terra/release_history.rst:204
msgid ""
"The same is true for the interactive JS equivalent, ``iplot_state()``. "
"The function names are all the same, just with a prepended `i` for each "
"function. For example, ``iplot_state(rho, method='paulivec')`` is "
"``iplot_state_paulivec(rho)``."
msgstr ""

#: ../../terra/release_history.rst:210
msgid "Changes to Backends"
msgstr ""

#: ../../terra/release_history.rst:212
msgid ""
"With the improvements made in the 0.7 release there are a few things "
"related to backends to keep in mind when upgrading. The biggest change is"
" the restructuring of the provider instances in the root  ``qiskit``` "
"namespace. The ``Aer`` provider is not installed by default and requires "
"the installation of the ``qiskit-aer`` package. This package contains the"
" new high performance fully featured simulator. If you installed via "
"``pip install qiskit`` you'll already have this installed. The python "
"simulators are now available under ``qiskit.BasicAer`` and the old C++ "
"simulators are available with ``qiskit.LegacySimulators``. This also "
"means that the implicit fallback to python based simulators when the C++ "
"simulators are not found doesn't exist anymore. If you ask for a local "
"C++ based simulator backend, and it can't be found an exception will be "
"raised instead of just using the python simulator instead."
msgstr ""

#: ../../terra/release_history.rst:226
msgid ""
"Additionally the previously deprecation top level functions "
"``register()`` and ``available_backends()`` have been removed. Also, the "
"deprecated ``backend.parameters()`` and ``backend.calibration()`` methods"
" have been removed in favor of ``backend.properties()``. You can refer to"
" the 0.6 release notes section :ref:`backends` for more details on these "
"changes."
msgstr ""

#: ../../terra/release_history.rst:232
msgid ""
"The ``backend.jobs()`` and ``backend.retrieve_jobs()`` calls no longer "
"return results from those jobs. Instead you must call the ``result()`` "
"method on the returned jobs objects."
msgstr ""

#: ../../terra/release_history.rst:237
msgid "Changes to the compiler, transpiler, and unrollers"
msgstr ""

#: ../../terra/release_history.rst:239
msgid ""
"As part of an effort to stabilize the compiler interfaces there have been"
" several changes to be aware of when leveraging the compiler functions. "
"First it is important to note that the ``qiskit.transpiler.transpile()`` "
"function now takes a QuantumCircuit object (or a list of them) and "
"returns a QuantumCircuit object (or a list of them). The DAG processing "
"is done internally now."
msgstr ""

#: ../../terra/release_history.rst:246
msgid ""
"You can also easily switch between circuits, DAGs, and Qobj now using the"
" functions in ``qiskit.converters``."
msgstr ""

#: ../../terra/release_history.rst:251
msgid "Deprecations"
msgstr ""

#: ../../terra/release_history.rst:253
msgid ""
"As part of the part of the 0.7 release the following things have been "
"deprecated and will either be removed or changed in a backwards "
"incompatible manner in a future release. While not strictly necessary "
"these are things to adjust for before the next release to avoid a "
"breaking change."
msgstr ""

#: ../../terra/release_history.rst:261
msgid ""
"``plot_circuit()``, ``latex_circuit_drawer()``, "
"``generate_latex_source()``,"
msgstr ""

#: ../../terra/release_history.rst:259
msgid ""
"and ``matplotlib_circuit_drawer()`` from qiskit.tools.visualization are "
"deprecated. Instead the ``circuit_drawer()`` function from the same "
"module should be used, there are kwarg options to mirror the "
"functionality of all the deprecated functions."
msgstr ""

#: ../../terra/release_history.rst:264
msgid ""
"The current default output of ``circuit_drawer()`` (using latex and "
"falling"
msgstr ""

#: ../../terra/release_history.rst:264
msgid ""
"back on python) is deprecated and will be changed to just use the "
"``text`` output by default in future releases."
msgstr ""

#: ../../terra/release_history.rst:266
msgid ""
"The `qiskit.wrapper.load_qasm_string()` and "
"`qiskit.wrapper.load_qasm_file()` functions are deprecated and the "
"`QuantumCircuit.from_qasm_str()` and `QuantumCircuit.from_qasm_file()` "
"constructor methods should be used instead."
msgstr ""

#: ../../terra/release_history.rst:269
msgid ""
"The ``plot_barriers`` and ``reverse_bits`` keys in the ``style`` kwarg "
"dict are deprecated, instead the "
"`qiskit.tools.visualization.circuit_drawer()` kwargs ``plot_barriers`` "
"and ``reverse_bits`` should be used instead."
msgstr ""

#: ../../terra/release_history.rst:272
msgid ""
"The functions `plot_state()` and `iplot_state()` have been depreciated. "
"Instead the functions `plot_state_*()` and `iplot_state_*()` should be "
"called for the visualization method required."
msgstr ""

#: ../../terra/release_history.rst:275
msgid ""
"The ``skip_transpiler`` arg has been deprecated from ``compile()`` and "
"``execute()``. Instead you can use the PassManager directly, just set the"
" ``pass_manager`` to a blank PassManager object with ``PassManager()``"
msgstr ""

#: ../../terra/release_history.rst:278
msgid ""
"The ``transpile_dag()`` function ``format`` kwarg for emitting different "
"output formats is deprecated, instead you should convert the default "
"output ``DAGCircuit`` object to the desired format."
msgstr ""

#: ../../terra/release_history.rst:281
msgid ""
"The unrollers have been deprecated, moving forward only DAG to DAG "
"unrolling will be supported."
msgstr ""

#: ../../terra/release_history.rst:286
msgid "Qiskit Terra 0.6.0"
msgstr ""

#: ../../terra/release_history.rst:288
msgid ""
"This release includes a redesign of internal components centered around a"
" new, formal communication format (`qobj`), along with long awaited "
"features to improve the user experience as a whole. The highlights, "
"compared to the 0.5 release, are:"
msgstr ""

#: ../../terra/release_history.rst:293
msgid ""
"Improvements for inter-operability (based on the `qobj` specification) "
"and extensibility (facilities for extending Qiskit with new backends in a"
" seamless way)."
msgstr ""

#: ../../terra/release_history.rst:296
msgid ""
"New options for handling credentials and authentication for the IBM Q "
"backends, aimed at simplifying the process and supporting automatic "
"loading of user credentials."
msgstr ""

#: ../../terra/release_history.rst:299
msgid ""
"A revamp of the visualization utilities: stylish interactive "
"visualizations are now available for Jupyter users, along with "
"refinements for the circuit drawer (including a matplotlib-based "
"version)."
msgstr ""

#: ../../terra/release_history.rst:302
msgid ""
"Performance improvements centered around circuit transpilation: the basis"
" for a more flexible and modular architecture have been set, including "
"paralellization of the circuit compilation and numerous optimizations."
msgstr ""

#: ../../terra/release_history.rst:308
msgid "Upgrading to 0.6.0"
msgstr ""

#: ../../terra/release_history.rst:310
msgid ""
"Please note that some backwards-incompatible changes have been introduced"
" during this release - the following notes contain information on how to "
"adapt to the new changes."
msgstr ""

#: ../../terra/release_history.rst:315
msgid "Removal of ``QuantumProgram``"
msgstr ""

#: ../../terra/release_history.rst:317
msgid ""
"As hinted during the 0.5 release, the deprecation of the  "
"``QuantumProgram`` class has now been completed and is no longer "
"available, in favor of working with the individual components "
"(:class:`~qiskit.backends.basejob.BaseJob`, "
":class:`~qiskit._quantumcircuit.QuantumCircuit`, "
":class:`~qiskit._classicalregister.ClassicalRegister`, "
":class:`~qiskit._quantumregister.QuantumRegister`, :mod:`~qiskit`) "
"directly."
msgstr ""

#: ../../terra/release_history.rst:325
msgid ""
"Please check the :ref:`0.5 release notes <quantum-program-0-5>` and the "
"examples for details about the transition::"
msgstr ""

#: ../../terra/release_history.rst:350
msgid "IBM Q Authentication and ``Qconfig.py``"
msgstr ""

#: ../../terra/release_history.rst:352
msgid ""
"The managing of credentials for authenticating when using the IBMQ "
"backends has been expanded, and there are new options that can be used "
"for convenience:"
msgstr ""

#: ../../terra/release_history.rst:355
msgid ""
"save your credentials in disk once, and automatically load them in future"
" sessions. This provides a one-off mechanism::"
msgstr ""

#: ../../terra/release_history.rst:361
msgid ""
"afterwards, your credentials can be automatically loaded from disk by "
"invoking :meth:`~qiskit.backends.ibmq.ibmqprovider.IBMQ.load_accounts`::"
msgstr ""

#: ../../terra/release_history.rst:367
msgid ""
"or you can load only specific accounts if you only want to use those in a"
" session::"
msgstr ""

#: ../../terra/release_history.rst:371
msgid ""
"use environment variables. If ``QE_TOKEN`` and ``QE_URL`` is set, the "
"``IBMQ.load_accounts()`` call will automatically load the credentials "
"from them."
msgstr ""

#: ../../terra/release_history.rst:375
msgid ""
"Additionally, the previous method of having a ``Qconfig.py`` file in the "
"program folder and passing the credentials explicitly is still supported."
msgstr ""

#: ../../terra/release_history.rst:382
msgid "Working with backends"
msgstr ""

#: ../../terra/release_history.rst:384
msgid ""
"A new mechanism has been introduced in Terra 0.6 as the recommended way "
"for obtaining a backend, allowing for more powerful and unified filtering"
" and integrated with the new credentials system. The previous top-level "
"methods :meth:`~qiskit.wrapper._wrapper.register`, "
":meth:`~qiskit.wrapper._wrapper.available_backends` and "
":meth:`~qiskit.wrapper._wrapper.get_backend` are still supported, but "
"will deprecated in upcoming versions in favor of using the `qiskit.IBMQ` "
"and `qiskit.Aer` objects directly, which allow for more complex "
"filtering."
msgstr ""

#: ../../terra/release_history.rst:393
msgid "For example, to list and use a local backend::"
msgstr ""

#: ../../terra/release_history.rst:400
msgid "And for listing and using remote backends::"
msgstr ""

#: ../../terra/release_history.rst:408
msgid ""
"Please note as well that the names of the local simulators have been "
"simplified. The previous names can still be used, but it is encouraged to"
" use the new, shorter names:"
msgstr ""

#: ../../terra/release_history.rst:413 ../../terra/release_history.rst:450
msgid "Qiskit Terra 0.5"
msgstr ""

#: ../../terra/release_history.rst:415
msgid "'local_qasm_simulator'"
msgstr ""

#: ../../terra/release_history.rst:415
msgid "'qasm_simulator'"
msgstr ""

#: ../../terra/release_history.rst:416
msgid "'local_statevector_simulator'"
msgstr ""

#: ../../terra/release_history.rst:416
msgid "'statevector_simulator'"
msgstr ""

#: ../../terra/release_history.rst:417
msgid "'local_unitary_simulator_py'"
msgstr ""

#: ../../terra/release_history.rst:417
msgid "'unitary_simulator'"
msgstr ""

#: ../../terra/release_history.rst:422
msgid "Backend and Job API changes"
msgstr ""

#: ../../terra/release_history.rst:424
msgid ""
"Jobs submitted to IBM Q backends have improved capabilities. It is "
"possible to cancel them and replenish credits (``job.cancel()``), and to "
"retrieve previous jobs executed on a specific backend either by job id "
"(``backend.retrieve_job(job_id)``) or in batch of latest jobs "
"(``backend.jobs(limit)``)"
msgstr ""

#: ../../terra/release_history.rst:430
msgid ""
"Properties for checking each individual job status (``queued``, "
"``running``, ``validating``, ``done`` and ``cancelled``) no longer exist."
" If you want to check the job status, use the identity comparison against"
" ``job.status``::"
msgstr ""

#: ../../terra/release_history.rst:441
msgid ""
"Please consult the new documentation of the "
":class:`~qiskit.backends.ibmq.ibmqjob.IBMQJob` class to get further "
"insight in how to use the simplified API."
msgstr ""

#: ../../terra/release_history.rst:445
msgid ""
"A number of members of :class:`~qiskit.backends.basebackend.BaseBackend` "
"and :class:`~qiskit.backends.basejob.BaseJob` are no longer properties, "
"but methods, and as a result they need to be invoked as functions."
msgstr ""

#: ../../terra/release_history.rst:452
msgid "backend.name"
msgstr ""

#: ../../terra/release_history.rst:452
msgid "backend.name()"
msgstr ""

#: ../../terra/release_history.rst:453
msgid "backend.status"
msgstr ""

#: ../../terra/release_history.rst:453
msgid "backend.status()"
msgstr ""

#: ../../terra/release_history.rst:454
msgid "backend.configuration"
msgstr ""

#: ../../terra/release_history.rst:454
msgid "backend.configuration()"
msgstr ""

#: ../../terra/release_history.rst:455
msgid "backend.calibration"
msgstr ""

#: ../../terra/release_history.rst:455
msgid "backend.properties()"
msgstr ""

#: ../../terra/release_history.rst:456
msgid "backend.parameters"
msgstr ""

#: ../../terra/release_history.rst:456
msgid "backend.jobs() backend.retrieve_job(job_id)"
msgstr ""

#: ../../terra/release_history.rst:458
msgid "job.status"
msgstr ""

#: ../../terra/release_history.rst:458
msgid "job.status()"
msgstr ""

#: ../../terra/release_history.rst:459
msgid "job.cancelled"
msgstr ""

#: ../../terra/release_history.rst:459
msgid "job.queue_position()"
msgstr ""

#: ../../terra/release_history.rst:460
msgid "job.running"
msgstr ""

#: ../../terra/release_history.rst:460
msgid "job.cancel()"
msgstr ""

#: ../../terra/release_history.rst:461
msgid "job.queued"
msgstr ""

#: ../../terra/release_history.rst:462
msgid "job.done"
msgstr ""

#: ../../terra/release_history.rst:467
msgid "Better Jupyter tools"
msgstr ""

#: ../../terra/release_history.rst:469
msgid ""
"The new release contains improvements to the user experience while using "
"Jupyter notebooks."
msgstr ""

#: ../../terra/release_history.rst:472
msgid ""
"First, new interactive visualizations of counts histograms and quantum "
"states are provided: :meth:`~qiskit.tools.visualization.plot_histogram` "
"and :meth:`~qiskit.tools.visualization.plot_state`. These methods will "
"default to the new interactive kind when the environment is Jupyter and "
"internet connection exists."
msgstr ""

#: ../../terra/release_history.rst:479
#, python-format
msgid ""
"Secondly, the new release provides Jupyter cell magics for keeping track "
"of the progress of your code. Use ``%%qiskit_job_status`` to keep track "
"of the status of submitted jobs to IBMQ backends. Use "
"``%%qiskit_progress_bar`` to keep track of the progress of "
"compilation/execution."
msgstr ""

#: ../../terra/release_history.rst:486
msgid "Qiskit Terra 0.5.0"
msgstr ""

#: ../../terra/release_history.rst:488
msgid ""
"This release brings a number of improvements to Qiskit, both for the user"
" experience and under the hood. Please refer to the full changelog for a "
"detailed description of the changes - the highlights are:"
msgstr ""

#: ../../terra/release_history.rst:492
msgid ""
"new ``statevector`` :mod:`simulators <qiskit.backends.local>` and feature"
" and performance improvements to the existing ones (in particular to the "
"C++ simulator), along with a reorganization of how to work with backends "
"focused on extensibility and flexibility (using aliases and backend "
"providers)."
msgstr ""

#: ../../terra/release_history.rst:496
msgid ""
"reorganization of the asynchronous features, providing a friendlier "
"interface for running jobs asynchronously via :class:`Job` instances."
msgstr ""

#: ../../terra/release_history.rst:498
msgid ""
"numerous improvements and fixes throughout the Terra as a whole, both for"
" convenience of the users (such as allowing anonymous registers) and for "
"enhanced functionality (such as improved plotting of circuits)."
msgstr ""

#: ../../terra/release_history.rst:504
msgid "Upgrading to 0.5.0"
msgstr ""

#: ../../terra/release_history.rst:506
msgid ""
"Please note that several backwards-incompatible changes have been "
"introduced during this release as a result of the ongoing development. "
"While some of these features will continue to be supported during a "
"period of time before being fully deprecated, it is recommended to update"
" your programs in order to prepare for the new versions and take "
"advantage of the new functionality."
msgstr ""

#: ../../terra/release_history.rst:516
msgid "``QuantumProgram`` changes"
msgstr ""

#: ../../terra/release_history.rst:518
msgid ""
"Several methods of the :class:`~qiskit.QuantumProgram` class are on their"
" way to being deprecated:"
msgstr ""

#: ../../terra/release_history.rst:521
msgid "methods for interacting **with the backends and the API**:"
msgstr ""

#: ../../terra/release_history.rst:523
msgid ""
"The recommended way for opening a connection to the IBMQ API and for "
"using the backends is through the top-level functions directly instead of"
" the ``QuantumProgram`` methods. In particular, the "
":func:`qiskit.register` method provides the equivalent of the previous "
":func:`qiskit.QuantumProgram.set_api` call. In a similar vein, there is a"
" new :func:`qiskit.available_backends`, :func:`qiskit.get_backend` and "
"related functions for querying the available backends directly. For "
"example, the following snippet for version 0.4::"
msgstr ""

#: ../../terra/release_history.rst:540 ../../terra/release_history.rst:558
msgid "would be equivalent to the following snippet for version 0.5::"
msgstr ""

#: ../../terra/release_history.rst:549
msgid "methods for **compiling and executing programs**:"
msgstr ""

#: ../../terra/release_history.rst:551
msgid ""
"The :ref:`top-level functions <qiskit_top_level_functions>` now also "
"provide equivalents for the :func:`qiskit.QuantumProgram.compile` and "
":func:`qiskit.QuantumProgram.execute` methods. For example, the following"
" snippet from version 0.4::"
msgstr ""

#: ../../terra/release_history.rst:564
msgid ""
"In general, from version 0.5 onwards we encourage to try to make use of "
"the individual objects and classes directly instead of relying on "
"``QuantumProgram``. For example, a :class:`~qiskit.QuantumCircuit` can be"
" instantiated and constructed by appending "
":class:`~qiskit.QuantumRegister`, :class:`~qiskit.ClassicalRegister`, and"
" gates directly. Please check the update example in the Quickstart "
"section, or the ``using_qiskit_core_level_0.py`` and "
"``using_qiskit_core_level_1.py`` examples on the main repository."
msgstr ""

#: ../../terra/release_history.rst:574
msgid "Backend name changes"
msgstr ""

#: ../../terra/release_history.rst:576
msgid ""
"In order to provide a more extensible framework for backends, there have "
"been some design changes accordingly:"
msgstr ""

#: ../../terra/release_history.rst:579
msgid "**local simulator names**"
msgstr ""

#: ../../terra/release_history.rst:581
msgid ""
"The names of the local simulators have been homogenized in order to "
"follow the same pattern: "
"``PROVIDERNAME_TYPE_simulator_LANGUAGEORPROJECT`` - for example, the C++ "
"simulator previously named ``local_qiskit_simulator`` is now "
"``local_qasm_simulator_cpp``. An overview of the current simulators:"
msgstr ""

#: ../../terra/release_history.rst:587
msgid ""
"``QASM`` simulator is supposed to be like an experiment. You apply a "
"circuit on some qubits, and observe measurement results - and you repeat "
"for many shots to get a histogram of counts via ``result.get_counts()``."
msgstr ""

#: ../../terra/release_history.rst:590
msgid ""
"``Statevector`` simulator is to get the full statevector (:math:`2^n` "
"amplitudes) after evolving the zero state through the circuit, and can be"
" obtained via ``result.get_statevector()``."
msgstr ""

#: ../../terra/release_history.rst:593
msgid ""
"``Unitary`` simulator is to get the unitary matrix equivalent of the "
"circuit, returned via ``result.get_unitary()``."
msgstr ""

#: ../../terra/release_history.rst:595
msgid ""
"In addition, you can get intermediate states from a simulator by applying"
" a ``snapshot(slot)`` instruction at various spots in the circuit. This "
"will save the current state of the simulator in a given slot, which can "
"later be retrieved via ``result.get_snapshot(slot)``."
msgstr ""

#: ../../terra/release_history.rst:600
msgid "**backend aliases**:"
msgstr ""

#: ../../terra/release_history.rst:602
msgid ""
"The SDK now provides an \"alias\" system that allows for automatically "
"using the most performant simulator of a specific type, if it is "
"available in your system. For example, with the following snippet::"
msgstr ""

#: ../../terra/release_history.rst:610
msgid ""
"the backend will be the C++ statevector simulator if available, falling "
"back to the Python statevector simulator if not present."
msgstr ""

#: ../../terra/release_history.rst:614
msgid "More flexible names and parameters"
msgstr ""

#: ../../terra/release_history.rst:616
msgid ""
"Several functions of the SDK have been made more flexible and user-"
"friendly:"
msgstr ""

#: ../../terra/release_history.rst:618
msgid "**automatic circuit and register names**"
msgstr ""

#: ../../terra/release_history.rst:620
msgid ""
":class:`qiskit.ClassicalRegister`, :class:`qiskit.QuantumRegister` and "
":class:`qiskit.QuantumCircuit` can now be instantiated without explicitly"
" giving them a name - a new autonaming feature will automatically assign "
"them an identifier::"
msgstr ""

#: ../../terra/release_history.rst:627
msgid ""
"Please note as well that the order of the parameters have been swapped "
"``QuantumRegister(size, name)``."
msgstr ""

#: ../../terra/release_history.rst:630
msgid "**methods accepting names or instances**"
msgstr ""

#: ../../terra/release_history.rst:632
msgid ""
"In combination with the autonaming changes, several methods such as "
":func:`qiskit.Result.get_data` now accept both names and instances for "
"convenience. For example, when retrieving the results for a job that has "
"a single circuit such as::"
msgstr ""

#: ../../terra/release_history.rst:641
msgid "The following calls are equivalent::"
msgstr ""

