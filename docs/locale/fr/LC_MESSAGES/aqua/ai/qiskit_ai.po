# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-31 13:06-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../aqua/ai/qiskit_ai.rst:5
msgid "Qiskit Artificial Intelligence"
msgstr ""

#: ../../aqua/ai/qiskit_ai.rst:7
msgid ""
"Qiskit Artificial Intelligence (AI) is a set of tools and algorithms that"
" enable experimenting with AI problems via quantum computing. Aqua AI is "
"the only end-to-end software stack that translates AI-specific problems "
"into inputs for one of the :ref:`quantum-algorithms` in :ref:`aqua-"
"library`, which in turn uses Qiskit Terra for the actual quantum "
"computation on top a quantum simulator or a real quantum hardware device."
msgstr ""

#: ../../aqua/ai/qiskit_ai.rst:14
msgid ""
"Qiskit AI allows users with different levels of experience to execute AI "
"experiments and contribute to the quantum computing AI software stack. "
"Users with a pure AI background or interests can continue to configure AI"
" problems without having to learn the details of quantum computing."
msgstr ""

#: ../../aqua/ai/qiskit_ai.rst:21
msgid "Applicable Algorithms"
msgstr ""

#: ../../aqua/ai/qiskit_ai.rst:23
msgid ""
"There are numerous algorithms from :ref:`aqua-library` that can be "
"applied to AI problems."
msgstr ""

#: ../../aqua/ai/qiskit_ai.rst:28
msgid "AI-specific Quantum Algorithms"
msgstr ""

#: ../../aqua/ai/qiskit_ai.rst:30
msgid ""
"Aqua AI comes with two quantum Support Vector Machine (SVM) algorithms "
"already integrated into the Aqua library:"
msgstr ""

#: ../../aqua/ai/qiskit_ai.rst:33
msgid ""
"The :ref:`svm-q-kernel` algorithm applies to classification problems that"
" require a feature map for which computing the kernel is not efficient "
"classically. This means that the required computational resources are "
"expected to scale exponentially with the size of the problem. SVM Q "
"Kernel uses a Quantum processor to solve this problem by a direct "
"estimation of the kernel in the feature space. The method used falls in "
"the category of what is called *supervised learning*, consisting of a "
"*training phase* (where the kernel is calculated and the support vectors "
"obtained) and a *test or classification phase* (where new labelless data "
"is classified according to the solution found in the training phase)."
msgstr ""

#: ../../aqua/ai/qiskit_ai.rst:44
msgid ""
"The :ref:`svm-variational` algorithm also applies to classification "
"problems that require a feature map for which computing the kernel is not"
" efficient classically. SVM Variational uses the variational method to "
"solve such problems in a quantum processor.  Specifically, it optimizes a"
" parameterized quantum circuit to provide a solution that cleanly "
"separates the data."
msgstr ""

#: ../../aqua/ai/qiskit_ai.rst:53
msgid "General Quantum Algorithms for AI"
msgstr ""

#: ../../aqua/ai/qiskit_ai.rst:55
msgid ""
"Other quantum algorithms available in Aqua that can be used to experiment"
" with AI problems include :ref:`vqe`, :ref:`qaoa`, :ref:`qpe`, "
":ref:`iqpe` and :ref:`grover`."
msgstr ""

#: ../../aqua/ai/qiskit_ai.rst:61
msgid "Classical Reference Algorithms for AI"
msgstr ""

#: ../../aqua/ai/qiskit_ai.rst:63
msgid ""
"To produce reference values and compare and contrast results during "
"experimentation, the Aqua library of :ref:`classical-reference-"
"algorithms` also includes the :ref:`avm-rbf-kernel` classical algorithm."
msgstr ""

#: ../../aqua/ai/qiskit_ai.rst:69
msgid "Contributing to Qiskit AI"
msgstr ""

#: ../../aqua/ai/qiskit_ai.rst:71
msgid ""
"Research and developers interested in :ref:`aqua-extending` with new AI-"
"specific capabilities can take advantage of the modular architecture of "
"Aqua and easily extend Aqua with more algorithms and algorithm "
"components, such as new :ref:`oracles` for the :ref:`grover` algorithm, "
":ref:`optimizers` and :ref:`variational-forms` for :ref:`vqe`, "
":ref:`qaoa`, and :ref:`svm-variational`, :ref:`iqfts` for :ref:`qpe`, "
":ref:`initial-states` for :ref:`variational-forms`, as well as :ref"
":`feature-maps` and :ref:`multiclass-extensions` for Support Vector "
"Machine (SVM) algorithms, such as :ref:`svm-variational` and "
":ref:`svm-q-kernel`."
msgstr ""

#: ../../aqua/ai/qiskit_ai.rst:83
msgid "Examples"
msgstr ""

#: ../../aqua/ai/qiskit_ai.rst:85
msgid ""
"The ``artificial_intelligence`` folder of the `Aqua Tutorials GitHub "
"Repository <https://github.com/Qiskit/aqua-tutorials>`__ contains "
"numerous `Jupyter Notebooks <http://jupyter.org/>`__ and input data files"
" explaining how to use Aqua AI."
msgstr ""

